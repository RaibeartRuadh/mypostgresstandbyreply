---
- hosts: master
  become: true
  tasks:

  - name: Ставим пакеты
    yum:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - nano
      - mc
      - unzip
      - postgresql11-server
      - postgresql11-contrib
      - python2-psycopg2

### если нужно генерировать свои ключи

#  - name: Генгерируем ssh ключи
#    openssh_keypair:
#      path: /root/.ssh/id_rsa
#  - name: Сохраняем публичный ключик в шару
#    fetch: 
#      src: /root/.ssh/id_rsa
#      dest: slavessh/
#      flat: yes
#  - name: Сохраняем публичный ключик в шару
#    fetch: 
#      src: /root/.ssh/id_rsa.pub
#     dest: slavessh/
#      flat: yes
######

  - name: Создадим директорию для ключей ssh под роль postgres
    file:
      path: /var/lib/pgsql/.ssh
      state: directory
      mode: '0700'
      owner: postgres
      group: postgres

  - name: Создадим .ssh/config
    file:
      path: /var/lib/pgsql/.ssh/config
      state: touch
      mode: 0600
    become_user: postgres

  - name: Отредактируем edit .ssh/config
    blockinfile:
      path: /var/lib/pgsql/.ssh/config
      block: StrictHostKeyChecking=no
    become_user: postgres

  - name: Передаем публичный ключик
    shell: cat /vagrant/playbook/slavessh/id_rsa.pub >> /var/lib/pgsql/.ssh/authorized_keys

  - name: Копируем ключик
    copy: src=masterssh/ dest=/var/lib/pgsql/.ssh/ owner=postgres group=postgres mode=0600

  - name: Копируем sudoers.d
    copy: src=sudoers.d_postgres dest=/etc/sudoers.d/postgres owner=root group=root mode=0440

  - name: Создаем запись под wal с правами postgres
    file:
      path: /var/lib/pgsql/11/wal_bck
      state: directory
      mode: '0700'
      owner: postgres
      group: postgres

  - name: Инициализируем кластер
    shell: /usr/pgsql-11/bin/initdb -E UTF8 --locale ru_RU.UTF-8 -D /var/lib/pgsql/11/data/
    become_user: postgres

  - name: Копируем наш конфиг postgresql.auto.conf
    copy: src=postgresql.auto.conf dest=/var/lib/pgsql/11/data/postgresql.auto.conf owner=postgres group=postgres mode=0600
#
  - name: Перезапуск postgresql
    systemd:
      name: postgresql-11
      state: restarted
      enabled: yes

  - name: Меняем пароль для базового пользователя
    postgresql_query:
      db: template1
      login_user: postgres
      query: ALTER USER postgres PASSWORD 'postpass'
    become_user: postgres

  - name: Копируем pgpass
    copy: src=master_pgpass dest=/var/lib/pgsql/.pgpass owner=postgres group=postgres mode=0600

  - name: Копируем pg_hba.conf
    copy: src=pg_hba.conf dest=/var/lib/pgsql/11/data/ owner=postgres group=postgres mode=0600

  - name: Перезапуск restart
    systemd:
      name: postgresql-11
      state: restarted
      enabled: yes

  - name: Создаем базу
    postgresql_db:
      name: mybase
      encoding: UTF-8
      template: template1
    become_user: postgres

  - name: Создаем роль barman
    postgresql_user:
      db: postgres
      name: barman
      password: barmanpass
      encrypted: true
      role_attr_flags: LOGIN,SUPERUSER,NOCREATEDB,NOCREATEROLE
    become_user: postgres

  - name: Создаем роль под репликацию
    postgresql_user:
      db: postgres
      name: replicant
      password: reppass
      encrypted: true
      role_attr_flags: LOGIN,REPLICATION
    become_user: postgres

  - name: Создаем роль streaming_barman под репликацию
    postgresql_user:
      db: postgres
      name: streaming_barman
      password: barmanpass
      encrypted: true
      role_attr_flags: REPLICATION
    become_user: postgres

  - name: Разрешаем слоты
    postgresql_query:
      db: postgres
      login_user: postgres
      query: SELECT pg_create_physical_replication_slot('standby_slot')
    become_user: postgres

  - name: Слот для barman под репликацию
    postgresql_query:
      db: postgres
      login_user: postgres
      query: SELECT pg_create_physical_replication_slot('barman')
    become_user: postgres

  - name: выполним pg_reload_conf
    postgresql_query:
      db: postgres
      login_user: postgres
      query: select pg_reload_conf()
    become_user: postgres







